angular.module("app",["ngRoute","ngCookies","ngResource","ngMessages","google-maps".ns(),"app.core","app.user","app.group"]).config(["$locationProvider","$routeProvider","$httpProvider",function(e,o,r){r.interceptors.push(interceptor)}]);var interceptor=function(e,o){return{responseError:function(r){return 401===r.status&&e.url("/login"),o.reject(r)}}};interceptor.$inject=["$location","$q"],angular.module("app.core",["ngRoute"]).config(["$locationProvider","$routeProvider",function(e,o){o.when("/",{templateUrl:"/app/modules/core/views/home.html",controller:"HomeController"}).when("/404",{templateUrl:"/app/modules/core/views/404.html"}).when("/login",{templateUrl:"/app/modules/core/views/login.html"}).when("/about",{templateUrl:"/app/modules/core/views/about.html"}).when("/signup",{templateUrl:"/app/modules/core/views/signup.html"}).otherwise({redirectTo:"/404"})}]),angular.module("app.group",["ngRoute"]).config(["$locationProvider","$routeProvider",function(e,o){o.when("/groups",{templateUrl:"/app/modules/core/views/groups.html",controller:"GroupsController",resolve:{log:checkLog}}).when("/groups/:id",{templateUrl:"/app/modules/group/views/group.index.html",controller:"GroupController"}).when("/groups/:id/edit",{templateUrl:"/app/modules/group/views/group.edit.html",controller:"GroupEditController"}).when("/group/create",{templateUrl:"/app/modules/group/views/group.create.html",controller:"GroupCreateController"})}]);var checkLog=function(e,o){e.get("/log").success(function(e){void 0===e.passport.user,o.user=e.passport.user})};checkLog.$inject=["$http","$rootScope","$location"],angular.module("app.user",["ngRoute"]).config(["$locationProvider","$routeProvider",function(e,o){o.when("/settings",{templateUrl:"./app/modules/user/views/user.edit.html",controller:"UserEditController"}).when("/users",{templateUrl:"/app/modules/core/views/users.html",controller:"UsersController"}).when("/user/:id",{templateUrl:"/app/modules/user/views/user.index.html",controller:"UserController"})}]),angular.module("app.core").controller("GroupsController",["$scope","Group","Session","$location",function(e,o,r){e.groups=o.query(),e.session=r}]),angular.module("app.core").controller("HomeController",["$rootScope","$scope","Session",function(e,o,r){o.session=r,o.user=e.user}]),angular.module("app.core").controller("UsersController",["$scope","User",function(e,o){e.users=o.query()}]),angular.module("app.core").factory("Session",["$cookieStore",function(e){var o={data:{},username:"",userid:"",isLoggedIn:!1,getData:function(){o.data=e.get("userid"),void 0!==o.data&&(o.username=o.data.username,o.userid=o.data.userid,o.isLoggedIn=!0)}};return o.getData(),o}]),angular.module("app.group").controller("GroupCreateController",["$scope","$rootScope","$location","Group",function(e,o,r,t){e.createGroup=function(){t.save({name:e.name,activity:e.activity,description:e.description,venue_location:[e.locationLat,e.locationLong]}).$promise.then(function(e){alert("Group has been added!"),r.path("/groups/"+e._id)})}}]),angular.module("app.group").controller("GroupEditController",["$scope","$location","$routeParams","Group",function(e,o,r,t){t.get({_id:r.id},function(o){e.group=o},function(){}),e.editGroup=function(){t.update({_id:r.id,name:e.group.name,description:e.group.description,activity:e.group.activity,venue_location:[e.group.venue_location[0],e.group.venue_location[1]],date_created:e.group.date_created,members:e.group.members}).$promise.then(function(){})}}]),angular.module("app.group").controller("GroupController",["$scope","$location","$routeParams","$route","Group",function(e,o,r,t,n){e.group=n.get({_id:r.id},function(o){e.map={center:{latitude:o.venue_location[0],longitude:o.venue_location[1]},zoom:15},e.marker={id:0,coords:{latitude:o.venue_location[0],longitude:o.venue_location[1]}},e.marker2={id:0,coords:{latitude:o.members[0].current_location[0],longitude:o.members[0].current_location[1]}}},function(){}),e.editButton=function(){o.path("/groups/"+r.id+"/edit")},e.deleteButton=function(){n.remove({_id:r.id}).$promise.then(function(){alert("Group has been deleted!"),o.path("/")})},e.joinButton=function(){n.addUser({_id:r.id}).$promise.then(function(){alert("You have joined the group!"),t.reload()})},e.leaveButton=function(){n.removeUser({_id:r.id}).$promise.then(function(){alert("You have left the group!"),o.path("/")})}}]),angular.module("app.group").factory("Group",["$resource",function(e){return e("/api/groups/:_id",{},{update:{method:"PUT",params:{_id:"@_id"}},addUser:{method:"PUT",url:"/api/groups/:_id/addUser",params:{_id:"@_id"}},removeUser:{method:"PUT",url:"/api/groups/:_id/removeUser",params:{_id:"@_id"}}})}]),angular.module("app.user").controller("UserEditController",["$scope","$routeParams","User","$location",function(e,o,r){r.getSignedInUser({},function(o){e.user=o}),e.editUser=function(){r.update({_id:e.user._id,name:e.user.name,email:e.user.email,home_location:[e.user.home_location[0],e.user.home_location[0]],current_location:[e.user.current_location[0],e.user.current_location[1]]}).$promise.then(function(e){console.log(e.error)})}}]),angular.module("app.user").controller("UserController",["$scope","$routeParams","$location","User",function(e,o,r,t){t.get({_id:o.id},function(o){e.user=o})}]),angular.module("app.user").factory("User",["$resource",function(e){return e("/api/users/:_id",{},{update:{method:"PUT",params:{_id:"@_id"}},getSignedInUser:{method:"GET",url:"/api/users/session/active"}})}]);