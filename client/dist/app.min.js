angular.module("app",["ngRoute","ngResource","ngMessages","ngSanitize","google-maps".ns(),"app.core","app.user","app.group"]).config(["$locationProvider","$routeProvider","$httpProvider",function(e,t,r){r.interceptors.push(interceptor)}]);var interceptor=function(e,t){return{responseError:function(r){return 401===r.status&&e.url("/login"),403===r.status&&alert("You do not have permission for this action!"),t.reject(r)}}};interceptor.$inject=["$location","$q"],angular.module("app.core",["ngRoute"]).config(["$routeProvider",function(e){e.when("/",{templateUrl:"/app/modules/core/views/home.html",controller:"HomeController"}).when("/404",{templateUrl:"/app/modules/core/views/404.html",controller:"404Controller"}).when("/login",{templateUrl:"/app/modules/core/views/login.html",controller:"LoginController"}).when("/about",{templateUrl:"/app/modules/core/views/about.html",controller:"AboutController"}).when("/signup",{templateUrl:"/app/modules/core/views/signup.html",controller:"SignupController"}).when("/messages",{templateUrl:"/app/modules/core/views/messages.html",controller:"MessagesController"}).when("/matchmaking",{templateUrl:"/app/modules/core/views/matchmaking.html",controller:"MatchmakingController"}).when("/match/:id",{templateUrl:"/app/modules/core/views/match.index.html",controller:"MatchController"}).when("/_=_",{redirectTo:"/"}).otherwise({redirectTo:"/404"})}]),angular.module("app.group",["ngRoute"]).config(["$routeProvider",function(e){e.when("/groups",{templateUrl:"/app/modules/core/views/groups.html",controller:"GroupsController"}).when("/groups/:id",{templateUrl:"/app/modules/group/views/group.index.html",controller:"GroupController"}).when("/groups/:id/edit",{templateUrl:"/app/modules/group/views/group.edit.html",controller:"GroupEditController"}).when("/group/create",{templateUrl:"/app/modules/group/views/group.create.html",controller:"GroupCreateController"})}]),angular.module("app.user",["ngRoute"]).config(["$routeProvider",function(e){e.when("/settings",{templateUrl:"./app/modules/user/views/user.edit.html",controller:"UserEditController"}).when("/users",{templateUrl:"/app/modules/core/views/users.html",controller:"UsersController"}).when("/user/:id",{templateUrl:"/app/modules/user/views/user.index.html",controller:"UserController"})}]),angular.module("app.core").controller("404Controller",["$scope","Title",function(e,t){t.set("404 Error")}]),angular.module("app.core").controller("AboutController",["$scope","Title",function(e,t){t.set("About")}]),angular.module("app.core").controller("GroupsController",["$scope","Group","Title",function(e,t,r){r.set("Groups"),e.groups=t.query()}]),angular.module("app.core").controller("HomeController",["$scope","Title",function(e,t){t.set("")}]),angular.module("app.core").controller("LoginController",["$scope","Title",function(e,t){t.set("Login")}]),angular.module("app.core").controller("MatchController",["$scope","Title","$routeParams","$http","$location",function(e,t,r,o,n){t.set("Matchmaking Group"),o.get("/api/tempGroup/"+r.id).success(function(t){"error"===t.message&&n.path("/"),e.tempGroup=t,e.acceptedByDate=new Date(t.date_created),e.acceptedByDate.setDate(e.acceptedByDate.getDate()+7)}),e.acceptButton=function(){o.post("/api/tempGroup/invite/accept/"+r.id).success(function(){o.get("/api/tempGroup/"+r.id).success(function(t){e.tempGroup=t})})},e.declineButton=function(){o.post("/api/tempGroup/invite/decline/"+r.id).success(function(){o.get("/api/tempGroup/"+r.id).success(function(t){e.tempGroup=t})})}}]),angular.module("app.core").controller("MatchmakingController",["$scope","Title","Matchmaking",function(e,t,r){t.set("Matchmaking"),e.message="Search for a group first!",e.findMatchmakingGroup=function(t){r.searchForGroup({interest:t.toLowerCase()}).$promise.then(function(t){"not enough matches to make group"===t.message&&(e.message=t.message),"temp group has been made, and messages sent."===t.message&&(e.message="Group has been formed: "+t.group._id)})}}]),angular.module("app.core").controller("MenuBarController",["$scope",function(){}]),angular.module("app.core").controller("MessagesController",["$scope","$routeParams","User","Title","$http",function(e,t,r,o,n){function s(){r.getSignedInUser({},function(t){e.user=t})}o.set("Messages"),s(),e.deleteMessage=function(e){n.delete("/api/message/delete/"+e).success(function(e){"message was deleted."===e.message&&s()})},e.markAsViewed=function(e){n.post("/api/message/viewed/"+e).success(function(){s()})},e.markAsUnviewed=function(e){n.post("/api/message/unviewed/"+e).success(function(){s()})}}]),angular.module("app.core").controller("SignupController",["$scope","Title","User",function(e,t,r){t.set("Sign Up"),e.createUser=function(){r.save(e.user).$promise.then(function(){alert("Signed up!")})}}]),angular.module("app.core").controller("SiteController",["$scope","UserFactory","Title",function(e,t,r){function o(){console.log(1),t.getUser().then(function(t){e.loggedInUser=t.data,t.data.username&&(e.loggedIn=!0,e.numberOfMessages=t.data.messages.length)})}e.Title=r,e.loggedIn=!1,o(),setInterval(o,2e4)}]),angular.module("app.core").controller("UsersController",["$scope","User","Title",function(e,t,r){r.set("Users"),e.users=t.query()}]),angular.module("app.core").directive("homepageLoggedIn",function(){return{restrict:"E",templateUrl:"/app/modules/core/views/homepage/loggedin.html"}}).directive("homepageLoggedOut",function(){return{restrict:"E",templateUrl:"/app/modules/core/views/homepage/loggedout.html"}}),angular.module("app.core").directive("menubarLoggedIn",function(){return{restrict:"E",templateUrl:"/app/modules/core/views/menubar/loggedin.html"}}).directive("menubarLoggedOut",function(){return{restrict:"E",templateUrl:"/app/modules/core/views/menubar/loggedout.html"}}),angular.module("app.core").factory("Matchmaking",["$resource",function(e){return e("/api/match/:_id",{},{searchForGroup:{method:"POST"},deleteMatch:{method:"DELETE",url:"/api/match/remove/:_id",params:{_id:"@_id"}},findCurrentSearches:{method:"GET",isArray:!0,url:"/api/match/user"}})}]),angular.module("app.core").factory("Title",function(){var e="FindAGroupFor.me",t="";return{get:function(){return""===t?e:t+" | "+e},set:function(e){t=e}}}),angular.module("app.core").factory("UserFactory",["$http",function(e){function t(){return e.get("/session")}return{getUser:t}}]),angular.module("app.group").controller("GroupCreateController",["$scope","$location","Group",function(e,t,r){e.createGroup=function(){r.save({name:e.name,interest:e.interest,description:e.description,venue_location:[e.locationLat,e.locationLong]}).$promise.then(function(e){alert("Group has been added!"),t.path("/groups/"+e._id)})}}]),angular.module("app.group").controller("GroupEditController",["$scope","$location","$routeParams","Group",function(e,t,r,o){o.get({_id:r.id},function(t){e.group=t},function(){}),e.editGroup=function(){o.update(e.group).$promise.then(function(t){"group has been updated."==t.message&&(alert("updated"),o.get({_id:r.id},function(t){e.group=t}))})}}]),angular.module("app.group").controller("GroupController",["$scope","$location","$routeParams","Group","Title",function(e,t,r,o,n){function s(){e.group=o.get({_id:r.id},function(t){n.set(t.name),t.privateGroup?e.private=!0:(e.map={center:{latitude:t.venue_location[1],longitude:t.venue_location[0]},zoom:12},e.groupMarker={id:0,options:{title:t.name,icon:"http://maps.google.com/mapfiles/ms/icons/blue-dot.png"},coords:{latitude:t.venue_location[1],longitude:t.venue_location[0]}},e.markerList=[],t.members.forEach(function(t){e.markerList.push({id:t._id,options:{title:t.name},coords:{latitude:t.home_location.coordinates[1],longitude:t.home_location.coordinates[0]}})}))})}e.private=!1,s(),e.editButton=function(){t.path("/groups/"+r.id+"/edit")},e.deleteButton=function(){o.remove({_id:r.id}).$promise.then(function(){alert("Group has been deleted!"),t.path("/")})},e.joinButton=function(){o.addUser({_id:r.id}).$promise.then(function(e){e.error?alert("Already in this group!"):(alert("You have joined the group!"),s())})},e.leaveButton=function(){o.removeUser({_id:r.id}).$promise.then(function(e){e.error?alert("Not in group!"):(alert("You have left the group!"),t.path("/"))})},e.addEventButton=function(e){o.addEvent({_id:r.id,events:e}).$promise.then(function(){s()})},e.removeEventButton=function(e){o.removeEvent({_id:r.id,event_id:e}).$promise.then(function(){s()})}}]),angular.module("app.group").directive("detailsPublic",function(){return{restrict:"E",templateUrl:"/app/modules/group/views/details/public.html"}}).directive("detailsPrivate",function(){return{restrict:"E",templateUrl:"/app/modules/group/views/details/private.html"}}),angular.module("app.group").directive("eventDetails",function(){return{restrict:"E",templateUrl:"app/modules/group/views/event/details.html"}}).directive("eventCreate",function(){return{restrict:"E",templateUrl:"app/modules/group/views/event/create.html"}}),angular.module("app.group").factory("Group",["$resource",function(e){return e("/api/groups/:_id",{},{update:{method:"PUT",params:{_id:"@_id"}},addUser:{method:"PUT",url:"/api/groups/:_id/addUser",params:{_id:"@_id"}},removeUser:{method:"DELETE",url:"/api/groups/:_id/removeUser",params:{_id:"@_id"}},addEvent:{method:"PUT",url:"/api/groups/:_id/event",params:{_id:"@_id"}},removeEvent:{method:"DELETE",url:"/api/groups/:_id/event/:event_id",params:{_id:"@_id",event_id:"@event_id"}}})}]),angular.module("app.user").controller("UserEditController",["$scope","$routeParams","User","$location","Title","Matchmaking","$http",function(e,t,r,o,n,s,i){function a(){r.getSignedInUser({},function(t){e.user=t})}n.set("Edit Settings"),e.addressNotVerified=!0,a(),s.findCurrentSearches({},function(t){e.match=t}),i.get("/api/users/interest/find").success(function(t){e.recommenededInterests=t}),e.addRecommendedInterest=function(t){r.addInterest({interest:t}).$promise.then(function(){a(),i.get("/api/users/interest/find").success(function(t){e.recommenededInterests=t})})},e.deleteMatch=function(t){s.deleteMatch({_id:t}).$promise.then(function(){s.findCurrentSearches({},function(t){e.match=t})})},e.editUser=function(){r.update({_id:e.user._id,name:e.user.name,password:e.user.password,email:e.user.email,"private":e.user.private}).$promise.then(function(e){"User has been updated"===e.message&&(alert("Profile Updated!"),a())})},e.verifyAddress=function(){var t=e.user.address.street+" "+e.user.address.city+" "+e.user.address.post_code+" "+e.user.address.country;geocoder=new google.maps.Geocoder,geocoder.geocode({address:t},function(t,r){r==google.maps.GeocoderStatus.OK?(e.userCoords=[],e.userCoords[0]=t[0].geometry.location.D,e.userCoords[1]=t[0].geometry.location.k,e.addressNotVerified=!1,e.$apply()):(e.addressNotVerified=!0,console.log("error, display somehow"))})},e.saveAddress=function(){r.updateAddress({_id:e.user._id,address:e.user.address,home_location:e.userCoords}).$promise.then(function(e){"address has been updated"===e.message&&(alert("Address Updated!"),a(),$("#addressBookModal").modal("hide"))})},e.addInterest=function(){var t=prompt("Please enter the interest:");null!==t&&r.addInterest({interest:t}).$promise.then(function(){a(),i.get("/api/users/interest/find").success(function(t){e.recommenededInterests=t})})},e.removeInterest=function(t){r.removeInterest({interest:t}).$promise.then(function(){a(),i.get("/api/users/interest/find").success(function(t){e.recommenededInterests=t})})}}]),angular.module("app.user").controller("UserController",["$scope","$routeParams","User","Title",function(e,t,r,o){e.private=!1,r.get({_id:t.id},function(t){e.user=t,e.user.name||(e.private=!0),o.set(t.username)})}]),angular.module("app.user").directive("addressBook",function(){return{restrict:"E",templateUrl:"/app/modules/user/views/addressbook/index.html"}}),angular.module("app.user").directive("profilePublic",function(){return{restrict:"E",templateUrl:"/app/modules/user/views/profile/public.html"}}).directive("profilePrivate",function(){return{restrict:"E",templateUrl:"/app/modules/user/views/profile/private.html"}}),angular.module("app.user").factory("User",["$resource",function(e){return e("/api/users/:_id",{},{update:{method:"PUT",params:{_id:"@_id"}},getSignedInUser:{method:"GET",url:"/api/users/session/active"},findMatchmakingGroups:{method:"GET",isArray:!0,url:"/api/groups/add/mm"},updateAddress:{method:"PUT",url:"api/users/address/update"},addInterest:{method:"POST",params:{interest:"@interest"},url:"/api/users/interest/add/:interest"},removeInterest:{method:"DELETE",params:{interest:"@interest"},url:"/api/users/interest/remove/:interest"}})}]);