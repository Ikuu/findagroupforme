angular.module('app', [
	'ngRoute', 
	'ngResource', 
	'ngMessages', 
	'google-maps'.ns(),
	'app.core',
	'app.user',
	'app.group'
])
.config(["$locationProvider", "$routeProvider", "$httpProvider", function($locationProvider, $routeProvider, $httpProvider) {
	$httpProvider.interceptors.push(interceptor);
}]);

var interceptor = function ($location, $q) {
	return {
		'responseError': function (response) {
			if (response.status === 401) {
				$location.url('/login');
			}
			if (response.status === 403) {
				alert("You do not have permission for this action!");
			}
			return $q.reject(response);
		}
	};
};
interceptor.$inject = ["$location", "$q"];
angular.module('app.group', ['ngRoute'])
.config(["$routeProvider", function($routeProvider) {
	$routeProvider
		.when('/groups', {
			templateUrl: '/app/modules/core/views/groups.html',
			controller: 'GroupsController'
		})
		.when('/groups/:id', {
			templateUrl: '/app/modules/group/views/group.index.html',
			controller: 'GroupController'
		})
		.when('/groups/:id/edit', {
			templateUrl: '/app/modules/group/views/group.edit.html',
			controller: 'GroupEditController'
		})
		.when('/group/create', {
			templateUrl: '/app/modules/group/views/group.create.html',
			controller: 'GroupCreateController'
		});
}]);

// Test function, checks to see if user logged in, if not kicks them out. Not needed due to httpInterceptor
/*var checkLog = function($http, $rootScope, $location){
	$http.get('/session')
		.success(function(data){
			$rootScope.user = data;
		})
		.error(function(data){
			$location.path('/login');
		});
};*/
angular.module('app.core', ['ngRoute'])
.config(["$routeProvider", function($routeProvider){
	$routeProvider
		.when('/', {
			templateUrl: '/app/modules/core/views/home.html',
			controller: 'HomeController'
			// Probably want a resolve somewhere in here to prevent $scope 'blinking'
		})
		.when('/404',{
			templateUrl: '/app/modules/core/views/404.html',
			controller: '404Controller'
		})
		.when('/login', {
			templateUrl: '/app/modules/core/views/login.html',
			controller: 'LoginController'
		})
		.when('/about', {
			templateUrl: '/app/modules/core/views/about.html',
			controller: 'AboutController'
		})
		.when('/signup', {
			templateUrl: '/app/modules/core/views/signup.html',
			controller: 'SignupController'
		})
		// To handle Facebook Login
		.when('/_=_', {
			redirectTo: '/'
		})
		.otherwise({
			redirectTo: '/404'
		});
}]);
angular.module('app.user', ['ngRoute'])
.config(["$routeProvider", function($routeProvider){
	$routeProvider
		// Profile
		.when('/settings',{
			templateUrl: './app/modules/user/views/user.edit.html',
			controller: 'UserEditController'
		})
		// User Routes
		.when('/users', {
			templateUrl: '/app/modules/core/views/users.html',
			controller: 'UsersController'
		})
		.when('/user/:id', {
			templateUrl: '/app/modules/user/views/user.index.html',
			controller: 'UserController'
		});
}]);
angular.module('app.group')
.controller('GroupCreateController', ["$scope", "$location", "Group", function($scope, $location, Group) {
		$scope.createGroup = function(){
			Group.save({
				name: $scope.name,
				activity: $scope.activity,
				description: $scope.description,
				venue_location: [$scope.locationLat, $scope.locationLong]
			}).$promise.then(function(response){
				alert("Group has been added!");
				$location.path('/groups/' + response._id);
			});
		};
	}]);
angular.module('app.group')
.controller('GroupEditController', ["$scope", "$location", "$routeParams", "$route", "Group", function($scope, $location, $routeParams, $route, Group) {
	Group.get({ _id: $routeParams.id }, function(group) {
		$scope.group = group;
	}, function(response){
	});

	$scope.editGroup = function(){
		Group.update($scope.group).$promise.then(function(response) {
			if (response.message == "group has been updated.") {
				alert("updated");
				$route.reload();
			}
		});
	};
}]);
angular.module('app.group')
.controller('GroupController', ["$scope", "$location", "$routeParams", "$route", "Group", "Title", function($scope, $location, $routeParams, $route, Group, Title) { 
	$scope.private = false;
	$scope.group = Group.get({ _id: $routeParams.id }, function(group) {
		Title.set(group.name);

		if (group.privateGroup) {
			$scope.private = true; 
		}
		else {
			$scope.map = {
				center:{
					latitude: group.venue_location[0],
					longitude: group.venue_location[1]
				},
				zoom: 15
			};
	
			$scope.marker = {
				id: 0,
				coords: {
					latitude: group.venue_location[0],
					longitude: group.venue_location[1]
				}
			};
			
			$scope.marker2 = {
				id: 0,
				coords: {
					latitude: group.members[0].current_location[0],
					longitude: group.members[0].current_location[1]
				}
			};
		}
	});

	$scope.editButton = function() {
		$location.path("/groups/"+$routeParams.id+"/edit");
	};

	$scope.deleteButton = function() {
		Group.remove({_id: $routeParams.id}).$promise.then(function(response) {
			console.log(response);
			alert("Group has been deleted!");
			$location.path('/');
		});
	};

	$scope.joinButton = function() {
		Group.addUser({_id: $routeParams.id}).$promise.then(function(response) {
			if (response.error) {
				alert("Already in this group!");
			}
			else {
				alert("You have joined the group!");
				$route.reload();
			}
		});
	};

	$scope.leaveButton = function() {
		Group.removeUser({_id: $routeParams.id}).$promise.then(function(response) {
			if (response.error) {
				alert("Not in group!");
			}
			else {
				alert("You have left the group!");
				$location.path("/");
			}
		});
	};

	$scope.addEventButton = function() {
		var eventVar = {
			name: "New Event",
			description: "Test event for testing",
			date: "02/02/2015 18:00",
			location: [55.879622, -4.571489],
		};

		Group.addEvent({_id: $routeParams.id, events: eventVar});
	};

	$scope.removeEventButton = function(event_id) {
		Group.removeEvent({_id: $routeParams.id, event_id: event_id});
	};
}]);
angular.module('app.group')
.directive('detailsPublic', function() {
	// not used at the moment
	return {
		restrict: 'E',
		scope: {
			group: "="
		},
		templateUrl: '/app/modules/group/views/details/public.html'
	};
})
.directive('detailsPrivate', function() {
	return {
		restrict: 'E',
		scope: {
			group: "="
		},
		templateUrl: '/app/modules/group/views/details/private.html'
	};
});	
angular.module('app.group')
.factory('Group', ["$resource", function($resource) {
	return $resource('/api/groups/:_id', {}, {
		update: {
			method: 'PUT',
			params: {_id: '@_id'}
		},
		addUser: {
			method: 'PUT',
			url: '/api/groups/:_id/addUser',
			params: {_id: '@_id'}
		},
		removeUser: {
			method: 'DELETE',
			url: '/api/groups/:_id/removeUser',
			params: {_id: '@_id'}
		},
		addEvent: {
			method: 'PUT',
			url: '/api/groups/:_id/event',
			params: {_id: '@_id'}
		},
		removeEvent: {
			method: 'DELETE',
			url: '/api/groups/:_id/event/:event_id',
			params: {_id: '@_id', event_id: '@event_id'}
		}
	});
}]);
angular.module('app.core')
.controller('404Controller', ["$scope", "Title", function($scope, Title) {
	Title.set('404 Error');
}]);
angular.module('app.core')
.controller('AboutController', ["$scope", "Title", function($scope, Title) {
	Title.set('About');
}]);
angular.module('app.core')
.controller('GroupsController', ["$scope", "Group", "Title", function($scope, Group, Title) {
	Title.set('Groups');
	$scope.groups = Group.query();
}]);
angular.module('app.core')
.controller('HomeController', ["$scope", "Title", function($scope, Title) {
	Title.set('');
}]);
angular.module('app.core')
.controller('LoginController', ["$scope", "Title", function($scope, Title){
	Title.set('Login');
}]);
angular.module('app.core')
.controller('MenuBarController', ["$scope", function($scope) {

}]);
angular.module('app.core')
.controller('SignupController', ["$scope", "Title", "User", function($scope, Title, User) {
	Title.set('Sign Up');

	$scope.createUser = function() {
		User.save($scope.user).$promise.then(function(response) {
			console.log(response);
			alert("Signed up!");
		});
	};
}]);
// This controller is used to setup and control site wide data.
angular.module('app.core')
.controller('SiteController', ["$scope", "UserFactory", "Title", function($scope, UserFactory, Title) {
	$scope.Title = Title;
	$scope.loggedIn = false;
	
	UserFactory.getUser().then(function success(response) {
		$scope.loggedInUser = response.data;
		if (response.data.username) {
			$scope.loggedIn = true;
		}
	});
}]);
angular.module('app.core')
.controller('UsersController', ["$scope", "User", "Title", function($scope, User, Title) {
	Title.set('Users');
	$scope.users = User.query();
}]);
angular.module('app.core')
.directive('homepageLoggedIn', function() {
	return {
		restrict: 'E',
		templateUrl: '/app/modules/core/views/homepage/loggedin.html'
	};
})

.directive('homepageLoggedOut', function() {
	return {
		restrict: 'E',
		templateUrl: '/app/modules/core/views/homepage/loggedout.html'
	};
});
angular.module('app.core')
.directive('menubarLoggedIn', function() {
	return {
		restrict: 'E',
		templateUrl: '/app/modules/core/views/menubar/loggedin.html'
	};
})

.directive('menubarLoggedOut', function() {
	return {
		restrict: 'E',
		templateUrl: '/app/modules/core/views/menubar/loggedout.html'
	};
});
angular.module('app.core')
.factory('Title', function() {
	var siteName = 'FindAGroupFor.me';
	var pageName = '';
	
	return {
		get: function() {
			if (pageName === '') {
				return siteName;
			}
			else {
				return pageName + ' | ' + siteName;
			}
		},
		set: function(newPageName) {
			pageName = newPageName;
		}
	};
});
angular.module('app.core')
.factory('UserFactory', ["$http", function($http) {
	return {
		getUser: getUser
	};

	function getUser(){
		return $http.get('/session');
	}
}]);
// Rename to settings. Also need to have some feedback on the changes the user has made.
angular.module('app.user')
.controller('UserEditController', ["$scope", "$routeParams", "User", "$location", "$route", "Title", function($scope, $routeParams, User, $location, $route, Title){
	Title.set('Edit Settings');
	User.getSignedInUser({}, function(user){
		$scope.user = user;
	});

	// Can just change this to pass $scope.user
	$scope.editUser = function() {
		User.update($scope.user).$promise.then(function(response) {
			console.log(response);
			if (response.message === "User has been updated") {
				alert("Profile Updated!");
				$route.reload();
			}
		});
	};
}]);
angular.module('app.user')
.controller('UserController', ["$scope", "$routeParams", "User", "Title", function($scope, $routeParams, User, Title) {
	$scope.private = false;
	User.get({ _id: $routeParams.id }, function(user) {
		$scope.user = user;
		if (!$scope.user.name) {
			$scope.private = true;
			//Might want something to show if your profile is hidden or not
		}
		Title.set(user.username);
	});
}]);
angular.module('app.user')
.directive('profilePublic', function() {
	return {
		restrict: 'E',
		scope: {
			user: "="
		},
		templateUrl: '/app/modules/user/views/profile/public.html'
	};
})

.directive('profilePrivate', function() {
	return {
		restrict: 'E',
		scope: {
			user: "="
		},
		templateUrl: '/app/modules/user/views/profile/private.html'
	};
});	
angular.module('app.user')
.factory('User', ["$resource", function($resource) {
	return $resource('/api/users/:_id', {}, {
		update: {
			method: 'PUT',
			params: {_id: '@_id'}
		},
		getSignedInUser: {
			method: 'GET',
			url: '/api/users/session/active'
		}
	});
}]);