angular.module("app",["ngRoute","ngResource","ngMessages","google-maps".ns(),"app.core","app.user","app.group"]).config(["$locationProvider","$routeProvider","$httpProvider",function(e,r,o){o.interceptors.push(interceptor)}]);var interceptor=function(e,r){return{responseError:function(o){return 401===o.status&&e.url("/login"),403===o.status&&alert("You do not have permission for this action!"),r.reject(o)}}};interceptor.$inject=["$location","$q"],angular.module("app.core",["ngRoute"]).config(["$routeProvider",function(e){e.when("/",{templateUrl:"/app/modules/core/views/home.html",controller:"HomeController"}).when("/404",{templateUrl:"/app/modules/core/views/404.html",controller:"404Controller"}).when("/login",{templateUrl:"/app/modules/core/views/login.html",controller:"LoginController"}).when("/about",{templateUrl:"/app/modules/core/views/about.html",controller:"AboutController"}).when("/signup",{templateUrl:"/app/modules/core/views/signup.html",controller:"SignupController"}).when("/messages",{templateUrl:"/app/modules/core/views/messages.html",controller:"MessagesController"}).when("/matchmaking",{templateUrl:"/app/modules/core/views/matchmaking.html",controller:"MatchmakingController"}).when("/_=_",{redirectTo:"/"}).otherwise({redirectTo:"/404"})}]),angular.module("app.group",["ngRoute"]).config(["$routeProvider",function(e){e.when("/groups",{templateUrl:"/app/modules/core/views/groups.html",controller:"GroupsController"}).when("/groups/:id",{templateUrl:"/app/modules/group/views/group.index.html",controller:"GroupController"}).when("/groups/:id/edit",{templateUrl:"/app/modules/group/views/group.edit.html",controller:"GroupEditController"}).when("/group/create",{templateUrl:"/app/modules/group/views/group.create.html",controller:"GroupCreateController"})}]),angular.module("app.user",["ngRoute"]).config(["$routeProvider",function(e){e.when("/settings",{templateUrl:"./app/modules/user/views/user.edit.html",controller:"UserEditController"}).when("/users",{templateUrl:"/app/modules/core/views/users.html",controller:"UsersController"}).when("/user/:id",{templateUrl:"/app/modules/user/views/user.index.html",controller:"UserController"})}]),angular.module("app.core").controller("404Controller",["$scope","Title",function(e,r){r.set("404 Error")}]),angular.module("app.core").controller("AboutController",["$scope","Title",function(e,r){r.set("About")}]),angular.module("app.core").controller("GroupsController",["$scope","Group","Title",function(e,r,o){o.set("Groups"),e.groups=r.query()}]),angular.module("app.core").controller("HomeController",["$scope","Title",function(e,r){r.set("")}]),angular.module("app.core").controller("LoginController",["$scope","Title",function(e,r){r.set("Login")}]),angular.module("app.core").controller("MatchmakingController",["$scope","Title","Matchmaking",function(e,r,o){r.set("Matchmaking"),e.findMatchmakingGroup=function(){o.searchForGroup({interest:"basketball"}).$promise.then(function(e){console.log(e.message)})}}]),angular.module("app.core").controller("MenuBarController",["$scope",function(){}]),angular.module("app.core").controller("MessagesController",["$scope","$routeParams","User","Title",function(e,r,o,t){t.set("Messages"),o.getSignedInUser({},function(r){e.user=r})}]),angular.module("app.core").controller("SignupController",["$scope","Title","User",function(e,r,o){r.set("Sign Up"),e.createUser=function(){o.save(e.user).$promise.then(function(){alert("Signed up!")})}}]),angular.module("app.core").controller("SiteController",["$scope","UserFactory","Title",function(e,r,o){e.Title=o,e.loggedIn=!1,r.getUser().then(function(r){e.loggedInUser=r.data,r.data.username&&(e.loggedIn=!0,e.numberOfMessages=r.data.messages.length)})}]),angular.module("app.core").controller("UsersController",["$scope","User","Title",function(e,r,o){o.set("Users"),e.users=r.query()}]),angular.module("app.core").directive("homepageLoggedIn",function(){return{restrict:"E",templateUrl:"/app/modules/core/views/homepage/loggedin.html"}}).directive("homepageLoggedOut",function(){return{restrict:"E",templateUrl:"/app/modules/core/views/homepage/loggedout.html"}}),angular.module("app.core").directive("menubarLoggedIn",function(){return{restrict:"E",templateUrl:"/app/modules/core/views/menubar/loggedin.html"}}).directive("menubarLoggedOut",function(){return{restrict:"E",templateUrl:"/app/modules/core/views/menubar/loggedout.html"}}),angular.module("app.core").factory("Matchmaking",["$resource",function(e){return e("/api/match/:_id",{},{searchForGroup:{method:"POST"},deleteMatch:{method:"DELETE",url:"/api/match/remove/:_id",params:{_id:"@_id"}},findCurrentSearches:{method:"GET",isArray:!0,url:"/api/match/user"}})}]),angular.module("app.core").factory("Title",function(){var e="FindAGroupFor.me",r="";return{get:function(){return""===r?e:r+" | "+e},set:function(e){r=e}}}),angular.module("app.core").factory("UserFactory",["$http",function(e){function r(){return e.get("/session")}return{getUser:r}}]),angular.module("app.group").controller("GroupCreateController",["$scope","$location","Group",function(e,r,o){e.createGroup=function(){o.save({name:e.name,activity:e.activity,description:e.description,venue_location:[e.locationLat,e.locationLong]}).$promise.then(function(e){alert("Group has been added!"),r.path("/groups/"+e._id)})}}]),angular.module("app.group").controller("GroupEditController",["$scope","$location","$routeParams","$route","Group",function(e,r,o,t,n){n.get({_id:o.id},function(r){e.group=r},function(){}),e.editGroup=function(){n.update(e.group).$promise.then(function(e){"group has been updated."==e.message&&(alert("updated"),t.reload())})}}]),angular.module("app.group").controller("GroupController",["$scope","$location","$routeParams","$route","Group","Title",function(e,r,o,t,n,l){e.private=!1,e.group=n.get({_id:o.id},function(r){l.set(r.name),r.privateGroup?e.private=!0:(e.map={center:{latitude:r.venue_location[0],longitude:r.venue_location[1]},zoom:15},e.marker={id:0,coords:{latitude:r.venue_location[0],longitude:r.venue_location[1]}},e.marker2={id:0,coords:{latitude:r.members[0].current_location[0],longitude:r.members[0].current_location[1]}})}),e.editButton=function(){r.path("/groups/"+o.id+"/edit")},e.deleteButton=function(){n.remove({_id:o.id}).$promise.then(function(){alert("Group has been deleted!"),r.path("/")})},e.joinButton=function(){n.addUser({_id:o.id}).$promise.then(function(e){e.error?alert("Already in this group!"):(alert("You have joined the group!"),t.reload())})},e.leaveButton=function(){n.removeUser({_id:o.id}).$promise.then(function(e){e.error?alert("Not in group!"):(alert("You have left the group!"),r.path("/"))})},e.addEventButton=function(e){n.addEvent({_id:o.id,events:e})},e.removeEventButton=function(e){n.removeEvent({_id:o.id,event_id:e})}}]),angular.module("app.group").directive("detailsPublic",function(){return{restrict:"E",templateUrl:"/app/modules/group/views/details/public.html"}}).directive("detailsPrivate",function(){return{restrict:"E",templateUrl:"/app/modules/group/views/details/private.html"}}),angular.module("app.group").directive("eventDetails",function(){return{restrict:"E",templateUrl:"app/modules/group/views/event/details.html"}}).directive("eventCreate",function(){return{restrict:"E",templateUrl:"app/modules/group/views/event/create.html"}}),angular.module("app.group").factory("Group",["$resource",function(e){return e("/api/groups/:_id",{},{update:{method:"PUT",params:{_id:"@_id"}},addUser:{method:"PUT",url:"/api/groups/:_id/addUser",params:{_id:"@_id"}},removeUser:{method:"DELETE",url:"/api/groups/:_id/removeUser",params:{_id:"@_id"}},addEvent:{method:"PUT",url:"/api/groups/:_id/event",params:{_id:"@_id"}},removeEvent:{method:"DELETE",url:"/api/groups/:_id/event/:event_id",params:{_id:"@_id",event_id:"@event_id"}}})}]),angular.module("app.user").controller("UserEditController",["$scope","$routeParams","User","$location","$route","Title","Matchmaking",function(e,r,o,t,n,l,a){l.set("Edit Settings"),o.getSignedInUser({},function(r){e.user=r}),a.findCurrentSearches({},function(r){e.match=r}),e.deleteMatch=function(e){a.deleteMatch({_id:e})},e.editUser=function(){var r=e.user.address.street+" "+e.user.address.city;geocoder=new google.maps.Geocoder,geocoder.geocode({address:r},function(r,t){t==google.maps.GeocoderStatus.OK&&(e.user.home_location.coordinates[0]=r[0].geometry.location.D,e.user.home_location.coordinates[1]=r[0].geometry.location.k,e.$apply(),o.update(e.user).$promise.then(function(e){"User has been updated"===e.message&&(alert("Profile Updated!"),n.reload())}))})}}]),angular.module("app.user").controller("UserController",["$scope","$routeParams","User","Title",function(e,r,o,t){e.private=!1,o.get({_id:r.id},function(r){e.user=r,e.user.name||(e.private=!0),t.set(r.username)})}]),angular.module("app.user").directive("profilePublic",function(){return{restrict:"E",templateUrl:"/app/modules/user/views/profile/public.html"}}).directive("profilePrivate",function(){return{restrict:"E",templateUrl:"/app/modules/user/views/profile/private.html"}}),angular.module("app.user").factory("User",["$resource",function(e){return e("/api/users/:_id",{},{update:{method:"PUT",params:{_id:"@_id"}},getSignedInUser:{method:"GET",url:"/api/users/session/active"},findMatchmakingGroups:{method:"GET",isArray:!0,url:"/api/groups/add/mm"}})}]);